# beNNch - Unified execution, collection, analysis and
# comparison of neural network simulation benchmarks.
# Copyright (C) 2021 Forschungszentrum Juelich GmbH, INM-6

# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <https://www.gnu.org/licenses/>.

# SPDX-License-Identifier: GPL-3.0-or-later

parameterset:
    - name: file_paths
      parameter:
       - {name: base_path, type: string, _: /p/project/icei-hbp-2020-0005/groenbekk1/beNNch}  # absolute path to main repository
       - {name: model_path, type: string, _: /p/home/jusers/groenbekk1/jusuf/project/models/microcircuit}  # absolute path to microcircuit model, e.g., <BASE_PATH>/models/Potjans_2014
    - name: model_parameters
      parameter:
       - {name: model_name, type: string, _: "microcircuit"}  # for identifying the model, can be any unique string
       - {name: net_params, type: string, _: "network_params.py"}  # default network parameters
       - {name: scale_N, type: float, _: "1."}  # scaling the number of neurons, 1. -> original model
       - {name: scale_K, type: float, _: "1."}  # scaling the indegree, 1. -> original model
       - {name: poisson_input, type: string, _: "False"}  # choose Poisson or DC input
       - {name: V0_type, type: text, _: "'optimized'"}  # choose default or optimized initial conditions for the membrane potential
       - {name: synapse_type, type: text, _: "'static_synapse'"}  # type of synapses in the model
       - {name: sim_params, _: sim_params.py}  # default simulation parameters
       - {name: model_time_sim, type: float, _: "10000."}  # biological time to be simulated in ms
       - {name: model_time_presim, _: "0."}  # in ms
       - {name: rng_seed, _: "1,2,3"}  # rng seed
       - {name: record_spikes, type: string, _: "'spike_recorder'"}  # change to 'spike_detector' for spike recordings
       - {name: kwds, separator: ;, type: string, _: "{}"}  # can be used for passing arguments to SetKernelStatus, such as max_buffer_size_spike_data. If no arguments should be passed leave this empty. If something should be passed insert a dictionary, eg: {'max_buffer_size_spike_data': 10}
       - {name: scaling_type, _: "strong"}  # can be either weak or strong
       - {name: type_network, _: "'droop','equal'"}  # droop or equal model
       - {name: resolution, _: "1/8,1/64"}  # resolution of simulations
       
    - name: machine_parameters
      parameter:
       - {name: num_nodes, type: int, _: "1"}  # number of nodes, accepts a list in the format a,b,c,... for generating multiple runs
       - {name: tasks_per_node, type: int, _: "1"}  # number of (MPI) tasks per node, accepts a list in the format a,b,c,... for generating multiple runs
       - {name: threads_per_task, type: int, _: "32"}  # number of threads per task, accepts a list in the format a,b,c,... for generating multiple runs
       - {name: walltime, type: string, _: "00:30:00"}  # wall time for the job in format hh:mm:ss
       - {name: affinity, type: string, separator: ";", _: "--cpu-bind=verbose,threads --distribution=block:cyclic:fcyclic --hint=nomultithread"}  # processor affinity/pinning
    - name: software_parameters
      parameter:            
       - {name: simulator, _: "nest-simulator"}  # simulator to be installed (plan file must be provided)
       - {name: version, _: "3.1"}  # simulator version
       - {name: variant, _: "default"}  # version variant
       - {name: suffix, _: ""}  # custom suffix for identification of simulator installation
       - {name: buildermod, _: ""} # absolute path to Builder modules folder


